version: 2.1
orbs:
  browser-tools: circleci/browser-tools@1.2.3
  ruby: circleci/ruby@2.1.0
jobs:
  build:
    docker:
      - image: cimg/ruby:3.2.2-node
    steps:
      - checkout
      - ruby/install-deps
      - run:
          name: Check Ruby&Rails
          command: |
            ruby --version
            gem install rails
            rails --version
  test:
    docker:
      - image: cimg/ruby:3.2.2-node
        environment:
          RAILS_ENV: test
          DB_USER: user
          DB_PASSWORD: passw0rd
          DB_HOST: 127.0.0.1
      - image: cimg/mysql:8.0
        command: |
          mysqld --default-authentication-plugin=mysql_native_password
        environment:
          MYSQL_DATABASE: Send_Email
          MYSQL_HOST: 127.0.0.1
          MYSQL_ROOT_PASSWORD: root
          MYSQL_USER: user
          MYSQL_PASSWORD: passw0rd
          MYSQL_ALLOW_EMPTY_PASSWORD: 'true'
          MYSQL_ROOT_HOST: '%'
    steps:
      - checkout
      - ruby/install-deps
      - run:
      # Our primary container isn't MYSQL so run a sleep command until it's ready.
          name: Waiting for MySQL to be ready
          command: |
            for i in `seq 1 10`;
            do
              nc -z 127.0.0.1 3306 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for MySQL && exit 1
      # - run:
      #     name: Import dummy data; run an example query
      #     command: |
      #       sudo apt-get update
      #       sudo apt-get install -y default-mysql-client
      #       mysql --version
      #       mysql -h 127.0.0.1 -u user -ppassw0rd test_db < sql-data/dummy.sql
      #       mysql -h 127.0.0.1 -u user -ppassw0rd --execute="SELECT * FROM test_db.Persons"
      - run:
          name: Setup DB
          command: |
            gem install rails
            rails db:create db:migrate
            echo DB creation success!!
      # Run rspec
      - ruby/rspec-test
workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test:
          requires:
            - build
